{"version":3,"sources":["webpack/bootstrap c6a5da73959e99435761","./js/main.js","./js/view.js","./js/simulation.js","./js/needle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;;;;;;ACXD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,IAAG;AACH,kCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c6a5da73959e99435761\n **/","const View = require('./view');\n\n$(document).ready(function() {\n  const canvas = document.getElementById('canvas');\n  if (canvas.getContext) {\n    const buffon_view = new View(canvas);\n    buffon_view.init();\n    buffon_view.run();\n  } else {\n    window.alert(\"This browser does not support canvas\");\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","const Simulation = require('./simulation');\n\nconst View = function (canvas) {\n  this.context = canvas.getContext('2d');\n  this.width = canvas.width;\n  this.height = canvas.height;\n}\n\nView.prototype.init = function() {\n  $( \".panel\" ).draggable();\n  $('#hide_introduction').click(function() {\n    $(\"#introduction_panel\").slideUp();\n  });\n  $('#hide_instructions').click(function() {\n    $('#instructions_panel').slideUp();\n  });\n};\n\nView.prototype.run = function() {\n  const simulation = new Simulation(this.context, this.width, this.height);\n  simulation.run();\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/view.js\n ** module id = 1\n ** module chunks = 0\n **/","const Needle = require('./needle');\n\nconst Simulation = function(c, w, h) {\n  this.context = c;\n  this.width  = w;\n  this.height = h;\n\n  this.nboards = 8;\n  this.interval = Math.floor(this.height / this.nboards);\n  this.needleLength = this.interval;\n\n  this.count = 0;\n  this.hit = 0;\n  this.running = false;\n  this.max = 0;\n};\n\n// generates empty grid of `nboards` horizontally\n// oriented floor boards on canvas\nSimulation.prototype.setGrid = function () {\n  const ctx = this.context;\n  ctx.strokeStyle = \"yellow\";\n  ctx.lineWidth = 1;\n  ctx.clearRect(0, 0, this.width, this.height);\n  ctx.beginPath();\n  for (let i = 1; i < this.nboards; i++) {\n    ctx.moveTo(0, i*this.interval);\n    ctx.lineTo(this.width, i*this.interval);\n    ctx.stroke();\n  }\n}\n\n// inititiates needle drop simulation on Grid\nSimulation.prototype.run = function () {\n\n  // set up canvas with horizontal with `nboards` floor boards\n  this.setGrid();\n\n  const self = this;\n\n  // start simulation\n  document.getElementById('start').addEventListener('click', function()\n    {\n      self.running = true;\n      setTimeout(self.dropNeedle.bind(self), 200);\n    }\n  );\n\n  // stop simulation\n  document.getElementById('stop').addEventListener('click', function()\n    {\n      self.running = false;\n    }\n  );\n\n  // reset simulation\n  document.getElementById('new').addEventListener('click', function()\n    {\n      self.running = false;\n      self.count = 0;\n      self.hit = 0;\n      self.showStats();\n\n      // reset grid to empty\n      self.setGrid();\n\n      setTimeout(self.dropNeedle.bind(self), 200);\n    }\n  );\n\n  // run fixed length simulation\n  document.getElementById('max').addEventListener('click', function()\n    {\n      self.max = document.getElementById('max').value;\n    }\n  );\n};\n\nSimulation.prototype.dropNeedle = function () {\n  let hit = false;\n  const needle = new Needle(this.context, this.width, this.height,\n                            this.interval, this.needleLength);\n\n  if (this.max > 0 && this.count >= this.max) {\n    this.running = false;\n  }\n\n  if (this.running) {\n    this.count++;\n\n    needle.add();\n    hit = needle.hit();\n    if (hit) {\n      this.hit++;\n    }\n    needle.draw();\n\n    this.showStats();\n\n    setTimeout(this.dropNeedle.bind(this), 10);\n  }\n};\n\n// report updated result on document\nSimulation.prototype.showStats = function() {\n    const miss = this.count - this.hit;\n    let fraction = 1;\n    if (this.count > 0) {\n      fraction = this.hit / this.count;\n    }\n    let estimate = 2 * this.needleLength / this.interval / fraction;\n    estimate = estimate.toFixed(7);\n    document.getElementById('count').innerHTML = this.count;\n    document.getElementById('hits').innerHTML = this.hit;\n    document.getElementById('misses').innerHTML = miss;\n    document.getElementById('estimate').innerHTML = estimate;\n};\n\nmodule.exports = Simulation;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/simulation.js\n ** module id = 2\n ** module chunks = 0\n **/","const Needle = function(c, w, h, D, L) {\n  this.ctx = c;\n  this.width  = w;\n  this.height = h;\n  this.interval = D;\n  this.needleLength = L;\n\n  this.x1 = 0;\n  this.y1 = 0;\n  this.x2 = 0;\n  this.y2 = 0;\n};\n\n// generate new needle with random position and orientation\nNeedle.prototype.add = function () {\n  const r = this.needleLength / 2;\n  const yrange = this.interval / 2.0 + this.height;\n\n  // random center coordinates\n  const x = Math.floor(this.width * Math.random());\n  const y = Math.floor(yrange * Math.random());\n  const phi = 2 * Math.PI * Math.random();\n\n  // end points\n  this.x1 = x - r * Math.cos(phi);\n  this.y1 = y - r * Math.sin(phi);\n  this.x2 = x + r * Math.cos(phi);\n  this.y2 = y + r * Math.sin(phi);\n};\n\n// determine hit (crosses boundary between boards) or miss\nNeedle.prototype.hit = function () {\n  const y1a = Math.floor(this.y1 + this.interval) % (2*this.interval);\n  const y2a = Math.floor(this.y2 + this.interval) % (2*this.interval);\n  if ( (y1a - this.interval) * (y2a - this.interval) < 0 ) {\n    this.ctx.strokeStyle = \"green\"; // hit\n    return true;\n  } else {\n    this.ctx.strokeStyle = \"red\"; // miss\n    return false;\n  }\n};\n\n// draw new needle with appropriate color\nNeedle.prototype.draw = function () {\n  this.ctx.lineWidth = 1;\n  this.ctx.beginPath();\n  this.ctx.moveTo(Math.floor(this.x1), Math.floor(this.y1));\n  this.ctx.lineTo(Math.floor(this.x2), Math.floor(this.y2));\n  this.ctx.stroke();\n};\n\nmodule.exports = Needle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/needle.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}