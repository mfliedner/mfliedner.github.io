{"version":3,"sources":["webpack/bootstrap 41222fb5120a317307a4","./js/main.js","./js/view.js","./js/simulation.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACND;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 41222fb5120a317307a4\n **/","const View = require('./view');\n\n$(document).ready(function() {\n  const root = $('.buffon');\n  const buffon_view = new View(root);\n  buffon_view.init();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","const Simulation = require('./simulation');\n\nconst View = function ($el) {\n  this.canvas = document.getElementById($el);\n  this.context = canvas.getContext('2d');\n  this.container = document.getElementById('container');\n  this.stats = document.getElementById('statistics_panel');\n}\n\nView.prototype.init = function() {\n  // this.resizeCanvas();\n  // window.addEventListener('resize', this.resizeCanvas);\n\n  const simulation = new Simulation(this.context);\n  simulation.grid();\n};\n\nView.prototype.resizeCanvas = function(e) {\n  $(this.canvas).attr('width', $(this.container).width());\n  $(this.canvas).attr('height', $(this.container).height());\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/view.js\n ** module id = 1\n ** module chunks = 0\n **/","const Simulation = function(c) {\n  this.width  = 1200;\n  this.height = 800;\n  this.nboards = 8;\n  this.interval = Math.floor(this.height / this.nboards);\n  this.needleLength = this.interval;\n\n  this.context = c;\n  this.count = 0;\n  this.hit = 0;\n  this.running = false;\n  this.max = 0;\n};\n\nSimulation.prototype.grid = function () {\n  const ctx = this.context;\n  ctx.strokeStyle = \"rgba(255,255,0,0.95)\";\n  ctx.lineWidth = 1;\n  ctx.clearRect(0, 0, this.width, this.height);\n  ctx.beginPath();\n  for (let i = 1; i < this.nboards; i++) {\n    ctx.moveTo(0, i*this.interval);\n    ctx.lineTo(this.width, i*this.interval);\n    ctx.stroke();\n  }\n\n\n  const self = this;\n\n  document.getElementById('start').addEventListener('click', function()\n    {\n      self.running = true;\n      setTimeout(self.needle.bind(self), 200);\n    // startSim();\n    }\n  );\n  document.getElementById('stop').addEventListener('click', function()\n    {\n      self.running = false;\n    }\n  );\n  document.getElementById('new').addEventListener('click', function()\n    {\n      self.running = false;\n      self.count = 0;\n      self.hit = 0;\n      self.showStats();\n\n      ctx.strokeStyle = \"rgba(255,255,0,0.95)\";\n      ctx.lineWidth = 1;\n      ctx.clearRect(0, 0, self.width, self.height);\n      ctx.beginPath();\n      for (let i = 1; i < self.nboards; i++) {\n        ctx.moveTo(0, i*self.interval);\n        ctx.lineTo(self.width, i*self.interval);\n        ctx.stroke();\n      }\n      setTimeout(self.needle.bind(self), 200);\n    }\n  );\n  document.getElementById('max').addEventListener('click', function()\n    {\n      self.max = document.getElementById('max').value;\n    }\n  );\n};\n\nSimulation.prototype.needle = function () {\n  const ref = 2 / Math.PI;\n  const ctx = this.context;\n  const r = this.needleLength / 2;\n  const yrange = this.interval / 2.0 + this.height;\n\n  if (this.max > 0 && this.count >= this.max) {\n    this.running = false;\n  }\n\n  if (this.running) {\n    this.count++;\n    const x = Math.floor(this.width * Math.random());\n    const y = Math.floor(yrange * Math.random());\n    const phi = 2 * Math.PI * Math.random();\n    const x1 = x - r * Math.cos(phi);\n    const y1 = y - r * Math.sin(phi);\n    const y1a = Math.floor(y1 + this.interval) % (2*this.interval);\n    const x2 = x + r * Math.cos(phi);\n    const y2 = y + r * Math.sin(phi);\n    const y2a = Math.floor(y2 + this.interval) % (2*this.interval);\n    if ( (y1a - this.interval) * (y2a - this.interval) < 0 ) {\n      this.hit++;\n      ctx.strokeStyle = \"rgb(0,255,0)\";\n    } else {\n      ctx.strokeStyle = \"rgb(255,0,0)\";\n    }\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(Math.floor(x1), Math.floor(y1));\n    ctx.lineTo(Math.floor(x2), Math.floor(y2));\n    ctx.stroke();\n    ctx.clearRect(0, this.height, this.width, this.height);\n\n    this.showStats();\n\n    setTimeout(this.needle.bind(this), 10);\n  }\n};\n\nSimulation.prototype.showStats = function() {\n    const miss = this.count - this.hit;\n    let fraction = 1;\n    if (this.count > 0) {\n      fraction = this.hit / this.count;\n    }\n    const estimate = 2 * this.needleLength / this.interval / fraction;\n    document.getElementById('count').innerHTML = this.count;\n    document.getElementById('hits').innerHTML = this.hit;\n    document.getElementById('misses').innerHTML = miss;\n    document.getElementById('estimate').innerHTML = estimate;\n};\n\nmodule.exports = Simulation;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/simulation.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}